{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRouter.js","router/PublicRouter.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchWithOutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","e","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","autoComplete","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","hourAfter","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titlevalid","setTitlevalid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMs","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","rows","AddNewRab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRouter","isAuthenticated","Component","component","rest","props","to","PublicRouter","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.080022ab.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new ',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event Updated',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLoaded: '[event] Events Loaded',\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {types} from \"../types/types\";\r\n/*{\r\n    id: new Date().getTime(),\r\n    title: 'Cumpleanios del jefe',\r\n    start: moment().toDate(), //Es como un new Date\r\n    end: moment().add(2, 'hours').toDate(),\r\n    notes: 'Comprar leche',\r\n    user: {\r\n    uid: '123',\r\n        name: 'Daniel'\r\n}\r\n}*/\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(event => (event.id === action.payload.id)\r\n                    ? action.payload\r\n                    : event)\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...action.payload\r\n                ]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import {types} from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n    //null\r\n    //name\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {uiReducer} from \"./uiReducer\";\r\nimport {combineReducers} from 'redux';\r\nimport {calendarReducer} from \"./calendarReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import {createStore, compose, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {rootReducer} from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nconst fetchWithOutToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; //loalhost:400/api/auth o events / endpoint\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n    const token = localStorage.getItem('token') || '';\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchWithOutToken,\r\n    fetchWithToken\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    );\r\n}","import {types} from \"../types/types\";\r\nimport {fetchWithToken} from \"../helpers/fetch\";\r\nimport {prepareEvents} from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                console.log(event)\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent})\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (e) {\r\n\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({type: types.eventDeleted});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.events);\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import {fetchWithOutToken, fetchWithToken} from \"../helpers/fetch\";\r\nimport Swal from \"sweetalert2\";\r\nimport {types} from \"../types/types\";\r\nimport {eventLogout} from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithOutToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithOutToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout});","import React from 'react';\r\nimport './login.css';\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {startLogin, startRegister} from \"../../actions/auth\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'daniel@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Fernando',\r\n        rEmail: 'fernando@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contrasenia no coincide', 'error')\r\n        }\r\n        dispatch(startRegister(rName, rEmail, rPassword1));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                autoComplete=\"off\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startLogout} from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"/>\r\n                <span onClick={handleLogout}> Logout</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event;\r\n    return (<div>\r\n        <strong>{title}</strong>\r\n        <span>-{user.name}</span>\r\n    </div>);\r\n}","import {types} from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\r\n\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal});","import React, {useEffect, useState} from \"react\";\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from \"moment\";\r\nimport Swal from 'sweetalert2';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {uiCloseModal} from \"../../actions/ui\";\r\nimport {\r\n    eventClearActiveEvent,\r\n    eventStartAddNew,\r\n    eventStartUpdated\r\n} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst hourAfter = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: hourAfter.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n\r\n    const [dateEnd, setDateEnd] = useState(hourAfter.toDate());\r\n\r\n    const [titlevalid, setTitlevalid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const afterOpenModal = () => {\r\n        console.log('opening')\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'fecha 2 debe ser mayor', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitlevalid(false);\r\n        }\r\n        //TODO: Realizar grabacion en db\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdated(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n\r\n        setTitlevalid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (<Modal\r\n        isOpen={modalOpen}\r\n        //onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMs={200}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n    >\r\n        <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n        <hr/>\r\n        <form\r\n            className=\"container\"\r\n            onSubmit={handleSubmitForm}\r\n        >\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora inicio</label>\r\n                <DateTimePicker\r\n                    onChange={handleStartDateChange}\r\n                    value={dateStart}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora fin</label>\r\n                <DateTimePicker\r\n                    onChange={handleEndDateChange}\r\n                    value={dateEnd}\r\n                    minDate={dateStart}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            <div className=\"form-group\">\r\n                <label>Titulo y notas</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className={`form-control ${!titlevalid && 'is-invalid'}`}\r\n                    placeholder=\"Título del evento\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <textarea\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Notas\"\r\n                    rows=\"5\"\r\n                    name=\"notes\"\r\n                    value={notes}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n            </div>\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary btn-block\"\r\n            >\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n            </button>\r\n\r\n        </form>\r\n    </Modal>);\r\n}","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {uiOpenModal} from \"../../actions/ui\";\r\n\r\nexport const AddNewRab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"/>\r\n        </button>\r\n    );\r\n}","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {eventDeleted, eventStartDelete} from \"../../actions/events\";\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (<button\r\n        className=\"btn btn-danger fab-danger\"\r\n        onClick={handleDelete}\r\n    >\r\n        <i className=\"fas fa-trash\"/>\r\n        <span> Borrar Evento</span>\r\n    </button>);\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport {Navbar} from \"../ui/Navbar\";\r\nimport {messages} from \"../../helpers/calendar-messages-es\";\r\nimport {CalendarEvent} from \"./CalendarEvent\";\r\nimport {CalendarModal} from \"./CalendarModal\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {uiOpenModal} from \"../../actions/ui\";\r\n\r\n\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport {eventClearActiveEvent, eventSetActive, eventStartLoading} from \"../../actions/events\";\r\nimport {AddNewRab} from \"../ui/AddNewFab\";\r\nimport {DeleteEventFab} from \"../ui/DeleteEventFab\";\r\n\r\nmoment.locale('es')\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        console.log(e);\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <AddNewRab/>\r\n            {\r\n                (activeEvent) && <DeleteEventFab/>\r\n            }\r\n            <CalendarModal/>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRouter = ({\r\n                                  isAuthenticated,\r\n                                  component: Component,\r\n                                  ...rest\r\n                              }) => {\r\n    return (\r\n        <Route {...rest} component={(props) => ((isAuthenticated)\r\n            ? (<Component {...props}/>)\r\n            : (<Redirect to=\"/login\"/>))\r\n        }/>\r\n    );\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport {\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRouter = ({\r\n                                 isAuthenticated,\r\n                                 component: Component,\r\n                                 ...rest\r\n                             }) => {\r\n    return (\r\n        <Route {...rest} component={(props) => ((isAuthenticated)\r\n            ? (<Redirect to=\"/\"/>)\r\n            : (<Component {...props}/>))\r\n        }/>\r\n    );\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, {useEffect} from \"react\";\r\nimport {LoginScreen} from \"../components/auth/LoginScreen\";\r\nimport {CalendarScreen} from \"../components/calendar/CalendarScreen\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {startChecking} from \"../actions/auth\";\r\nimport {PrivateRouter} from \"./PrivateRouter\";\r\nimport {PublicRouter} from \"./PublicRouter\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter exact path=\"/login\" isAuthenticated={!!uid}\r\n                                  component={LoginScreen}/>\r\n                    <PrivateRouter exact path=\"/\" isAuthenticated={!!uid}\r\n                                   component={CalendarScreen}/>\r\n                    <Redirect to=\"/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","import React from \"react\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\nimport {AppRouter} from \"./router/AppRouter\";\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CalendarApp} from \"./CalendarApp\";\n\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}